{\rtf1\ansi \deff7\deflang1033{\fonttbl{\f0\froman\fcharset0\fprq2 Tms Rmn;}{\f1\froman\fcharset2\fprq2 Symbol;}{\f2\fswiss\fcharset0\fprq2 Helv;}{\f3\fmodern\fcharset0\fprq1 Courier;}
{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f6\froman\fcharset0\fprq2 MS Serif;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}{\f8\froman\fcharset0\fprq2 Times;}{\f9\fswiss\fcharset0\fprq2 Helvetica;}
{\f10\fswiss\fcharset0\fprq2 System;}{\f11\fmodern\fcharset0\fprq1 Courier New;}{\f12\froman\fcharset0\fprq2 New York;}{\f13\fswiss\fcharset0\fprq2 Geneva;}{\f14\fnil\fcharset2\fprq2 Marlett;}{\f15\fnil\fcharset2\fprq2 Wingdings;}
{\f16\fswiss\fcharset0\fprq2 Arial Black;}{\f17\fswiss\fcharset0\fprq2 Impact;}{\f18\fscript\fcharset0\fprq2 Comic Sans MS;}{\f19\fswiss\fcharset0\fprq2 Verdana;}{\f20\froman\fcharset2\fprq2 Webdings;}{\f21\fswiss\fcharset0\fprq2 Arial Narrow;}
{\f22\froman\fcharset0\fprq2 Book Antiqua;}{\f23\froman\fcharset0\fprq2 Bookman Old Style;}{\f24\fswiss\fcharset0\fprq2 Century Gothic;}{\f25\froman\fcharset0\fprq2 Garamond;}{\f26\fswiss\fcharset0\fprq2 Haettenschweiler;}
{\f27\fscript\fcharset0\fprq2 Monotype Corsiva;}{\f28\fnil\fcharset2\fprq2 MS Outlook;}{\f29\fswiss\fcharset0\fprq2 Trebuchet MS;}{\f30\froman\fcharset2\fprq2 Wingdings 2;}{\f31\froman\fcharset2\fprq2 Wingdings 3;}{\f32\fswiss\fcharset0\fprq2 Tahoma;}
{\f33\fswiss\fcharset2\fprq2 Andale Mono IPA;}{\f34\fswiss\fcharset0\fprq2 MS Reference Sans Serif;}{\f35\froman\fcharset0\fprq2 MS Reference Serif;}{\f36\fswiss\fcharset0\fprq2 Verdana Ref;}{\f37\froman\fcharset0\fprq2 Georgia Ref;}
{\f38\fnil\fcharset2\fprq2 MS Reference 1;}{\f39\fnil\fcharset2\fprq2 MS Reference 2;}{\f40\fnil\fcharset2\fprq2 MS Reference Specialty;}{\f41\fnil\fcharset2\fprq2 RefSpecialty;}{\f42\froman\fcharset0\fprq2 Georgia;}
{\f43\fmodern\fcharset0\fprq1 Monotype.com;}{\f44\froman\fcharset0\fprq2 Minion Web;}{\f45\froman\fcharset0\fprq2 Map Symbols;}{\f46\froman\fcharset2\fprq2 MapInfo Cartographic;}{\f47\fswiss\fcharset0\fprq1 MS Dialog;}
{\f48\froman\fcharset238\fprq2 Times New Roman CE;}{\f49\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f50\froman\fcharset161\fprq2 Times New Roman Greek;}{\f51\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f52\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f53\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f54\froman\fcharset186\fprq2 Times New Roman Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar \f7\fs22\lang1031 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive\f7\fs16 \sbasedon10 annotation reference;}{\s16\nowidctlpar \f7\fs20\lang1031 
\sbasedon0\snext16 annotation text;}{\s17\nowidctlpar\tqc\tx4252\tqr\tx8504 \f7\fs22\lang1031 \sbasedon0\snext17 footer;}{\s18\nowidctlpar\tqc\tx4252\tqr\tx8504 \f7\fs22\lang1031 \sbasedon0\snext18 header;}{\*\cs19 \additive\f7\fs16\up6 \sbasedon10 
footnote reference;}{\s20\nowidctlpar \f7\fs20\lang1031 \sbasedon0\snext20 footnote text;}{\s21\fi-2268\li2268\nowidctlpar\tx2268 \f7\fs22\lang1031 \sbasedon0\snext21 W1;}{\s22\nowidctlpar \b\f7\lang1031 \sbasedon0\snext22 UEB1;}{\*\cs23 \additive\super 
\sbasedon10 endnote reference;}}{\info{\title Helpfile zu SF}{\author Andreas Grech}{\operator Andreas Grech}{\creatim\yr2001\mo6\dy24\hr18\min32}{\revtim\yr2001\mo6\dy24\hr18\min54}{\version2}{\edmins0}{\nofpages75}{\nofwords5039}{\nofchars28726}
{\*\company  }{\vern57431}}\paperw11907\paperh16840\margl1134\margr1134\margt1418\margb1134 \facingp\deftab709\widowctrl\ftnbj\aenddoc\ftnrestart\hyphhotz425\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0 \fet0\sectd 
\linex576\headery709\footery1735\colsx709\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \widctlpar \f7\fs22\lang1031 {\v\fs16 {\*\atnid x}{\*\atnauthor x}\chatn {\*\annotation 
\pard\plain \s16\widctlpar \f7\fs20\lang1031 {\field{\*\fldinst PAGE \\# "'Seite: '#'\line '"}{\fldrslt Seite: 1\line }}{\fs16 \chatn }}}{\cs19\fs16\up6 ${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 I}{\lang2057 nhalts\'fc
bersicht}}}
\par \pard \qc\widctlpar {\b\fs29 WinInfo 1.8}{\fs29 
\par }\pard \widctlpar {\fs29 
\par }\pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 \'dcberblick}{\b0\fs20 
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par {\ul WinInfo}{\v copyright} zeigt Informationen \'fcber den augenblicklichen Zustand des Systems an.
\par Im einzelnen sind das:
\par 
\par \tab {\uldb\lang2057 Tasks}{\v\lang2057 tasks}{\lang2057 
\par \tab }{\uldb\lang2057 Module}{\v\lang2057 module}{\lang2057 
\par \tab }{\uldb\lang2057 Heap}{\v\lang2057 globalheap}{\lang2057 
\par \tab }{\uldb\lang2057 USER Status}{\v\lang2057 userstat}{\lang2057 
\par \tab }{\uldb GDI Status}{\v gdistat}
\par \tab {\uldb DOS Status}{\v dosstat}
\par \tab {\uldb DPMI Status}{\v dpmistat}
\par \tab {\uldb System Status}{\v system}
\par 
\par Zum Verst\'e4ndnis der angezeigten Informationen werden an einigen Stellen Kenntnisse \'fcber Aufbau und Arbeitsweise von Windows vorausgesetzt.
\par 
\par {\lang2057 Weitere Themen:
\par 
\par \tab }{\ul\lang2057 Tastatur}{\v\lang2057 keyboard}{\lang2057 
\par \tab }{\uldb\lang2057 Parameter in .INI-File}{\v\lang2057 inifile}{\lang2057 
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 t}{\lang2057 asks}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 T}{\lang2057 asks}}K{\footnote \pard\plain \widctlpar 
\f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 T}{\lang2057 asks}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Tasks}{\b0\fs20 
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par In der oberen Liste werden die zur Zeit vorhandenen Tasks, in der unteren Liste die der selektierten Task zugeordneten Windows angezeigt.
\par 
\par In der Statuszeile werden f\'fcr die selektierte Task der Stackpointer, CS:IP und die aktuellen Stackparameter des Stacksegments (DGROUP) ausgegeben.
\par 
\par {\b Funktionen}
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\uldb Anzeigen}{\v anzeige}\tab Hexdump der TDB ("Task Database")
\par {\uldb Local}{\v local}\tab Anzeige des lokalen Heaps der Task
\par {\ul Auto}{\v auto}\tab Hexdump des Automatic Data Segments
\par {\ul Switch to}{\v switchto}\tab In die Task wechseln
\par {\ul Terminate}{\v terminate}\tab Task beenden (\'fcber Message)
\par {\ul Kill}{\v kill}\tab Task beenden (\'fcber Funktion TerminateApp())
\par {\ul Atome}{\v atome}\tab Anzeige der lokalen Atome der Task
\par {\ul Detail}{\v detailtask}\tab detaillierte Anzeige der TDB ("Task Database")
\par {\ul Stack}{\v stacktask}\tab Stacktrace ausgeben
\par {\ul Refresh}{\v refresh}\tab Tasks werden neu eingelesen
\par {\ul Beenden}{\v beenden}\tab beendet den Dialog
\par \pard\plain \widctlpar \f7\fs22\lang1031 
\par Durch Doppelklick auf ein Element der zugeordneten Windows wird f\'fcr dieses Window eine {\ul Window Dialogbox}{\v windowbox} ausgegeben.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 m}{\lang2057 odule}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 M}{\lang2057 odule}}K{\footnote \pard\plain \widctlpar 
\f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 M}{\lang2057 odule}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Module
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par In der oberen Liste sind die momentan geladenen Module (Programme, DLLs, Fonts, Treiber) zu sehen, in der Liste unten links werden f\'fcr das jeweils selektierte Modul die zugeh\'f6rigen Segmente angezeigt.
\par 
\par In der {\cf2 oberen Statuszeile} wird ausgegeben: die Anzahl der Segmente des aktuellen Moduls, deren Platzbedarf im Hauptspeicher beim Laden, der Platzbedarf der auslagerbaren Segmente, der Referenzz\'e4hler (Cnt; gibt an, wie
 oft das Modul explizit oder implizit "geladen" wurde.) sowie die Segmentnummer des "automatischen" Datensegments (DGROUP). 
\par 
\par In der {\cf2 unteren Statuszeile} werden links die Speicheroptionen des aktuellen Segments ("discardable", "moveable" usw.) ausgegeben. Rechts werden, sofern das Segment in den Speicher geladen wurde, die Attribute des zugeh\'f6
rigen Deskriptors (Basis, Limit und Zugriffsrechte) angezeigt. Ansonsten erscheint der Hinweis "not present".
\par 
\par {\b Funktionen}
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\uldb Anzeigen}{\v anzeige}\tab Hexdump der "Modul Database" bzw. des Segments
\par {\uldb Detail}{\v details}\tab strukturierte Anzeige der "Modul Database"
\par {\uldb Importe}{\v imports}\tab \'dcbersicht \'fcber die importierten Namen des Moduls
\par {\uldb Exporte}{\v exports}\tab \'dcbersicht \'fcber die exportierten Namen des Moduls
\par {\uldb Local}{\v local}\tab \'dcbersicht \'fcber die Objekte auf dem lokalen Heap
\par {\uldb Resourcen}{\v resource}\tab \'dcbersicht \'fcber die Resourcen des Moduls
\par {\ul Load Modul}{\v loadmod}\tab explizites Laden eines Moduls (Erh\'f6hen des "Ladez\'e4hlers")
\par {\ul Free Modul}{\v freemod}\tab explizites Entladen eines Moduls (Verringern des "Ladez\'e4hlers")
\par {\ul Atome}{\v atome} \tab Anzeige der lokalen Atome des Moduls
\par {\ul Snapshot}{\v snapshot} \tab Inhalt der Modulliste in Datei schreiben (Pr\'e4fix MOD;SGM)
\par {\ul Refresh}{\v refresh}\tab Die Modulliste wird neu eingelesen
\par {\ul Beenden}{\v beenden}\tab Beendet den Dialog
\par \pard\plain \widctlpar \f7\fs22\lang1031 
\par 
\par {\b Bedeutung der Spalte "Flags" bei Segmenten}
\par 
\par Bit\tab Bedeutung
\par 0\tab 0=Code, 1=Data
\par 1\tab 0=Speicher f\'fcr Segment ist nicht allokiert, 1=Speicher ist allokiert
\par 2\tab 0=Segment ist nicht geladen, 1=Segment ist geladen
\par {\lang2057 3\tab reserviert
\par 4\tab 0=fixed, 1=moveable
\par 5\tab 0=nonshareable bzw. impure, 1=shareable bzw. pure 
\par }6\tab 0=loadoncall, 1=preload
\par 7\tab 0=Segment ist r/w bzw. r/e, 1=Segment ist r/o bzw. e/o
\par 8\tab 0=keine Relokationen vorhanden, 1=Relokationen vorhanden
\par {\lang2057 9\tab 0=nonconforming, 1=conforming (nicht f\'fcr Windows)
\par }10\tab reserviert
\par 11\tab 1=Segment ist Teil eines Segments > 64 kB 
\par {\lang2057 12\tab 0=nondiscardable, 1=discardable
\par 13\tab 0=16-Bit-Segment, 1=32-Bit-Segment (nicht f\'fcr Windows)
\par }14\tab reserviert
\par 15\tab reserviert (0 bei Programmen, 1 bei DLLs)\tab \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 g}{\lang2057 lobalheap}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 
H}{\lang2057 eap (global)}}K{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 H}{\lang1036 eap (global)}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20\lang2057 Heap
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\lang2057 
\par Liste des globalen Heaps ("Heapwalk"). }Im globalen Heap sind alle speicherbelegenden Objekte verzeichnet. Objekte mit Handle 0 sind freie Adressbereiche oder aber interne Markierungen. {\uldb Resourcen}{\v resource} und {\ul Segmenten}{\v segmente}
 mit Attribut "LoadonCall" wird erst beim Laden Speicher zugewiesen. Zuvor belegen sie zwar Handles, aber noch keinen linearen Speicher und erscheinen deshalb im globalen Heap nicht (sie k\'f6nnen \'fcber den Dialog {\uldb Module}{\v module}
 angeschaut werden).
\par 
\par {\b Funktionen}
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\uldb Anzeigen}{\v anzeige}\tab Hexdump des Objektes
\par {\uldb Local Heap}{\v local}\tab Anzeige des lokalen Heaps des Objektes, sofern vorhanden{\ul 
\par Selektor}{\v selektor}\tab direkte Selektion eines Objektes \'fcber Selektor/Handle
\par {\ul Linear}{\v linear}{\b \tab }direkte Eingabe einer linearen Adresse ohne Handle
\par {\ul Discard}{\v discard}\tab Spezifisches Objekt discarden (nur wenn Attribut discardable)
\par {\uldb Optionen}{\v heapwalkopt}{\b \tab }Selektions- und Sortierparameter f\'fcr Heapwalk \'e4ndern
\par {\ul Refresh}{\v refresh}\tab Heap neu einlesen
\par {\ul Beenden}{\v beenden}\tab Dialog beenden
\par 
\par \pard\plain \widctlpar \f7\fs22\lang1031 Die angezeigte Liste und die obere der beiden Statuszeilen wird nur durch "Refresh" neu aufbereitet. Die untere Statuszeile wird dagegen durch einfaches Anklicken des Objektes erneuert. Deshalb ist es m\'f6
glich, da\'df sich die Attribute eines Objektes in der Liste und die entsprechenden Attribute in der Statuszeile (Typ) widersprechen.
\par Die durch Kommas getrennten Attribute in der Liste kommen folgenderma\'dfen zustande:
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 \tab 
\par {\lang1036 1. Attribut\tab Typ des "Besitzers". }M=Modul, T=Task,?=unbekannt oder kein Owner\tab 
\par {\lang1036 2. Attribut\tab Typ des Objektes (free, code, data, res usw.)
\par }3. Attribut\tab zus\'e4tzliche Daten (Segmentnummer, bei Resourcen Resourcetyp)
\par 4. Attribut\tab R\'fcckgabewert von Globalflags().
\par 
\par In der unteren Statuszeile wird im Feld "Typ"  angezeigt:
\par 
\par {\lang1036 1. Attribut:\tab Typ des Objektes
\par }{\lang2057 2. Attribut:\tab Speicheroption (Discardable, Fixed/Moveable oder Discarded)
\par }{\lang1036 3. Attribut:\tab Typ des Descriptors: CODE, DATA oder ???.
\par 4. Attribut:\tab aktuelles Limit des Deskriptors
\par 5. Attribut\tab aktuelle Accessrights des Deskriptors
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\lang1036 \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 i}{\lang1036 nterrupts}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {
\cs19\fs16\up6\lang1036 I}{\lang1036 nterrupts}}K{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 I}{\lang1036 nterrupts}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Interrupts
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par In der linken Listbox: Anzeige der Belegung der Interruptvektoren f\'fcr Protected und Real Mode, ermittelt mithilfe der entsprechenden DPMI-Funktionen (die Ermittlung der Protected-Mode-Interruptvektoren \'fc
ber die DOS-Funktion 0x35 wird bei den Interrupts 0,2,4,6,7,0x3E und 0x75 andere, "taskspezifische" Werte ergeben. \'dcber {\uldb Task}{\v tasks} ist deren Anzeige m\'f6glich). In der rechten Listbox: Anzeige der Exception-Vektoren, ebenfalls \'fc
ber DPMI ermittelt. Neben den Adressen der Interruptroutinen wird, sofern m\'f6glich, der Owner der Routine angezeigt.{\ul 
\par }
\par {\b Funktionen}
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\uldb Disassembler}{\v\ul disassembler}{\ul  }\tab disassembliert die selektierte Interrupt/Exceptionroutine. Eine Anzeige der Real Mode-Routinen ist nicht m\'f6glich.
\par {\ul Refresh}{\v refresh}\tab Vektoren neu einlesen
\par {\ul Beenden}{\v beenden}\tab Dialog beenden
\par \pard\plain \widctlpar \f7\fs22\lang1031 \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 I}{\lang1036 DT}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 I}{\lang1036 
nterrupt Descriptor Table}}K{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 I}{\lang1036 nterrupt Descriptor Table}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Interrupt Descriptor Table
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Anzeige der Belegung der Interrupt Descriptor Tabelle. Im erweiterten Modus von Windows wird hier zum gr\'f6\'dften Teil direkt in 32-Bit-Code gesprungen.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 L}{\lang1036 DT}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 L}{\lang2057 ocal Descriptor Table}}K{\footnote \pard\plain 
\widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 L}{\lang2057 ocal Descriptor Table}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Local Descriptor Table
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Anzeige der Belegung einer Local Descriptor Tabelle. Im erweiterten Modus von Windows k\'f6nnen mehrere LDTs vorhanden sein, wenn in mindestens einer DOS-Box eine Protected Mode Applikation l\'e4uft. Ein Hexdump der Segmente ist nur \'fcber DPMI{\v 
dpmistat} m\'f6glich.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 i}{\lang2057 obm}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 I}{\lang1040 O-Permission Bitmap}}K{\footnote \pard\plain 
\widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 I}{\lang1040 O_Permission Bitmap}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 IO-Permission Bitmap
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Bei 80386 Prozessoren kann f\'fcr jeden IO-Port bestimmt werden, ob ein Zugriffsversuch eine Exception ausl\'f6sen soll. F\'fcr alle Ports in der Liste ist diese \'dcberwachung aktiv. Die Bitmap wird \'fcber das aktuelle Task State Segment (TSS) erreicht.

\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 u}{\lang1040 serstat}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 U}{\lang1040 SER Status}}K{\footnote \pard\plain 
\widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 U}{\lang1040 SER Status}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 USER Status
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Anzeige der USER Systemparameter (System Metrics).
\par 
\par {\b Funktionen}
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\uldb Klassen}{\v klassen}\tab Anzeige der zur Zeit registrierten Klassen.
\par {\uldb Windows}{\v windowlist}\tab Anzeige der zur Zeit vorhandenen Windows (keine Child Windows)
\par {\uldb Local Heap}{\v local}\tab Anzeige des Local Heaps von USER
\par {\ul Monitor}{\v usermon}\tab Anzeige der Belegung der Heaps von USER und GDI. Automatischer Refresh alle 2 Sekunden.
\par {\ul Beenden}{\v beenden}\tab Dialog beenden
\par \pard\plain \widctlpar \f7\fs22\lang1031 \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 g}{\fs20\lang1024 distat}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 G}{
\fs20\lang1024 DI Status}}K{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 G}{\fs20\lang1024 DI Status}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 GDI Status
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Anzeige der Display Capabilities.
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\uldb Local Heap}{\v local}\tab Anzeige des Local Heaps von GDI
\par {\ul Beenden}{\v beenden}\tab Dialog beenden
\par \pard\plain \widctlpar \f7\fs22\lang1031 \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 d}{\lang1040 osstat}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 D}{\lang1040 
OS Status}}K{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 D}{\lang1040 OS Status}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 DOS Status
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Anzeige der zur Zeit ge\'f6ffneten Files aus der SFT (System File Table).
\par 
\par Windows legt sich intern einen PSP an, der bei eigenen Dateizugriffen (bspw. Programme, DLLs und Resourcen laden) benutzt wird.  \'dcber diesen PSP ge\'f6ffnete Files sind durch den Eintrag "<kernel>" in der Spalte "Task" erkennbar. Mit "<msdos>"  in
 der Spalte "Task" gekennzeichnete Files sind keinem PSP der Windows-VM zuzuordnen (bspw. in "DOS-Boxen" ge\'f6ffnete Files).
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 In der {\b Statuszeile}:\tab maximale Anzahl {\ul Filehandles} {\v filehandle}(mu\'df nicht mit dem Eintrag FILES=XX aus CONFIG.SYS \'fcbereinstimmen).
\par \pard\plain \widctlpar \f7\fs22\lang1031 
\par {\b Funktionen}
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\ul Memory}{\v mcblist}\tab Anzeige der DOS-Speicherbelegung (MCBs)
\par {\ul\lang1036 Devices}{\v\lang1036 dosdevice}{\lang1036 \tab Anzeige der DOS-Devices
\par }{\ul DPB}{\v dosdpb}\tab Anzeige der Drive Parameter Blocks
\par {\ul CDS}{\v doscds}\tab Anzeige der Current Directory Structures
\par {\ul EMS}{\v emsstat}\tab Anzeige des EMS-Status, sofern vorhanden
\par {\ul XMS}{\v xmsstat}\tab Anzeige des XMS-Status
\par {\ul Refresh}{\v refresh}\tab Neueinlesen der ge\'f6ffneten Files
\par {\ul Beenden}{\v beenden}\tab Dialog beenden
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 d}{\lang1040 pmistat}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 D}{\lang1040 PMI Status}}K{\footnote \pard\plain 
\widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 D}{\lang1040 PMI Status}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 DPMI Status
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Anzeige der Deskriptoren der Local Descriptor Table (LDT). Die Informationen werden \'fcber DPMI geholt (\'fcber {\uldb System}{\v system} kann die aktuelle LDT auch direkt gelesen werden).
\par 
\par Windows l\'e4uft im Standard- und Enhanced Mode als DPMI-Client. Einige elementare Resourcen beschafft sich Windows deshalb \'fcber DPMI-Funktionen. Die wichtigsten Arten dieser Resourcen s
ind  Deskriptoren, linearer Speicher und  CPU-Moduswechsel. Die DPMI-Serverfunktionen werden durch die Programme DOSX.EXE (Standard Modus) bzw. WIN386.EXE (erweiterter Modus) bereitgestellt.
\par 
\par DOSX.EXE verh\'e4lt sich nicht ganz entsprechend der DPMI-Spezifikation. Die Funktion 0x000B (Get Descriptor) wird von WinInfo verwendet, um g\'fcltige bzw. belegte Selektoren zu ermitteln. DOSX.EXE gibt aber bei freien Selektoren hier keinen Fehler zur
\'fcck. Deshalb wird im Standard Modus WinInfo immer f\'e4lschlicherweise so gut wie alle Deskriptoren als belegt melden.
\par 
\par {\b Funktionen}
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\uldb Anzeigen}{\v anzeige}\tab Hexdump des Selektor-Speicherbereichs
\par {\ul Monitor}{\v dpmimon}\tab Status der DPMI-Speicherverwaltung
\par {\uldb Interrupts}{\v interrupts}\tab Interrupt- und Exceptionvektoren
\par {\uldb Erweitert}{\v enhanced}\tab Informationen aus dem erweiterten Modus von Windows 
\par {\ul Refresh}{\v refresh}\tab Neueinlesen der LDT
\par {\ul Beenden}{\v beenden}\tab Dialog beenden
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 s}{\lang1040 ystem}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 S}{\lang2057 ystem Status}}K{\footnote \pard\plain 
\widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 S}{\lang2057 ystem Status}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 System}{\fs20\ul 
\par }\pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\ul 
\par }Anzeige der Global Descriptor Table (GDT).{\ul 
\par 
\par }Funktionen
\par 
\par {\ul TSS}{\v iobm}\tab TSS (insb. IO-Permission-Bitmap) anzeigen
\par {\ul IDT}{\v idt}\tab IDT (Interrupt Descriptor Table) anzeigen{\ul 
\par LDT}{\v ldt}\tab LDT (Local Descriptor Table) anzeigen{\ul 
\par }{\uldb Paging}{\v paging}\tab Paging Tabellen anzeigen
\par {\ul Snapshot}{\v snapshot} \tab Inhalt der GDT in Datei schreiben (Pr\'e4fix SYS)
\par {\ul Refresh}{\v refresh}\tab Neueinlesen der GDT
\par {\ul Beenden}{\v beenden}\tab Dialog beenden
\par \pard\plain \widctlpar \f7\fs22\lang1031 \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 i}{\lang2057 nifile}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 I}{\lang1036 
NI-Parameter}}K{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 I}{\lang1036 NI-Parameter}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20\lang1040 Parameter in .INI-File
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\lang1040 
\par }Abschnitt [positions]
\par 
\par Positionen der einzelnen Fenster. Diese Parameter werden vom Programm gepflegt. Eine manuelle Pflege ist wenig sinnvoll.
\par 
\par {\ul Abschnitt [colors]}
\par 
\par "DlgBkgnd=<bRot>,<bGr\'fcn>,<bBlau>"
\par Abweichende Farbe f\'fcr den Hintergrund der Dialogboxen. Standardm\'e4\'dfig haben Listboxen und Dialogboxen dieselbe Hintergrundfarbe. Mit diesem Eintrag kann davon abgewichen werden. Der Wertebereich f\'fcr bRot, bGr\'fcn oder bBlau ist 0-255. 
\par {\ul 
\par Abschnitt [flags]}
\par 
\par "UnloadWarning=<bool>"
\par Schalter, ob bei Entladefunktionen (Module oder Resourcen) zur Sicherheit nochmals nachgefragt werden soll. M\'f6gliche Werte sind 1 (Sicherheitsabfrage ein; Default) oder 0 (Sicherheitsabfrage aus).
\par 
\par "OwnerdrawWarning=<bool>"
\par Schalter, ob beim Interpretieren von Dialogboxen ein Hinweis ausgegeben werden soll, wenn Controls mit Attribut "OwnerDraw" vorhanden sind. M\'f6gliche Werte sind 1 (Hinweis wird ausgegeben; Default) oder 0 (kein Hinweis).
\par 
\par "GetVMPSP=<bool>"
\par Schalter, ob bei der Anzeige der DOS-VMs im Dialog {\uldb Erweitert}{\v enhanced} der zugeh\'f6rige aktuelle PSP ermittelt und angezeigt werden soll. Die Option ist standardm\'e4\'df
ig ausgeschaltet, weil die Ermittlung, so wie sie in der aktuellen Implementierung vorgenommen wird, sich stark auf undokumentierte Funktionen st\'fctzt.
\par 
\par 
\par "NativeImport=<bool>"
\par Durch Setzen des Schalters auf 1 wird WinInfo veranla\'dft, bei der Ausgabe der {\uldb Importe}{\v imports} auch Referenzen innerhalb eines Moduls auszugeben. Dies dient nur zu Testzwecken und die Option ist deshalb in der Voreinstellung ausgeschaltet.

\par 
\par {\ul Abschnitt [ints]
\par }
\par "UnassLines=<zahl>"
\par Anzahl Zeilen, die maximal disassembliert werden. Wird \'fcber Programm eingestellt.
\par 
\par {\ul Abschnitt [strings]}
\par 
\par "User=<string>"
\par Name des registrierten Benutzers. Inzwischen obsolet.
\par 
\par "regid=<Zahl>
\par Registriernummer des Benutzers. Inzwischen obsolet.
\par 
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 r}{\fs20\lang1024 efresh}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 R}{\fs20\lang1024 efresh}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Refresh
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Die jeweils angezeigte Liste wird neu eingelesen und angezeigt.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 b}{\fs20\lang1024 eenden}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 B}{\fs20\lang1024 eenden}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Beenden
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Wie nicht anders zu erwarten: dieser Button beendet den jeweiligen Dialog und schlie\'dft das Fenster.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 i}{\fs20\lang1024 mports}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 I}{\fs20\lang1024 mporte}}K{\footnote \pard\plain 
\widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 I}{\fs20\lang1024 mporte}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Importe
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par  Importe sind Referenzen eines Moduls auf {\uldb Exporte}{\v exports} anderer Module. Angezeigt werden Adresse, Relokationstyp (RT), Adresstyp (AT) und Name des Imports. Der Name besteht aus einem Modul- und einem Funktionsnamen.
\par 
\par  F\'fcr Importe gibt es die Relokationstypen "by ordinal" (01) und "by name" (02). Bei "{\cf2 by ordinal}
" wird im importierenden Modul nur die (Funktions)-nummer der von einem anderen Modul exportierten Funktion abgelegt. WinInfo sucht in diesem Fall beim exportierenden Modul nach dem Funktionsnamen. Wenn die exportierte Funktion (der "Entry") zwar vorhande
n ist, aber kein Name gefunden werden kann, wird die Funktionsnummer mit Pr\'e4fix "@" als Name ausgegeben. Bei der Importart "{\cf2 by name}
" wird der Name der Funktion im importierenden Modul in der Tabelle der importierten Namen abgelegt. Diese Art des Importierens ist beim dynamischen Linken deutlich langsamer und vergleichsweise selten anzutreffen. In der Statuszeile wird die Anzahl der "
by name"-Importe ausgegeben.
\par 
\par  Zus\'e4tzlich wird in der Statuszeile die Anzahl der "undefinierten" Importe angezeigt. Das sind Verweise auf nicht vorhandene {\uldb Exporte}{\v exports}
 anderer Module. Sie werden von Windows beim Laden des Programmcodes zu einem Aufruf der Funktion "UndefDynlink()" abge\'e4
ndert. Wird diese Funktion aufgerufen, erscheint die Meldung "Aufruf eines undefinierten Dynlinks" und die Applikation wird beendet. WinInfo \'fcberpr\'fc
ft nur die "by ordinal"-Importe auf Korrektheit und kennzeichnet die undefinierten mit "(undef)" hinter der Funktionsnummer. 
\par 
\par WinInfo weist nicht alle importierenden Stellen eines Moduls aus, sondern es wird die je Segment vorhandene Relokationstabelle ausgegeben. Aufgrund deren Struktur bedeutet dies, da\'df innerhalb eines Segments identische Importe unter den Tisch fallen k
\'f6nnen.
\par 
\par Es gibt folgende Adresstypen:
\par 
\par {\lang2057 00\tab Low-Byte des Offsets
\par 02\tab 16-Bit Selektor
\par 03\tab 32-Bit Far Pointer
\par 05\tab 16-Bit Offset
\par 0B\tab 48-Bit Far Pointer
\par }0D\tab 32-Bit Offset
\par 
\par {\b Funktionen}
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\uldb Disassembler}{\v disassembler}\tab disassembliert ab der den Import beinhaltenden Adresse.
\par {\ul Umsortieren}{\v umsortimport}\tab \'e4ndert Sortierung
\par {\ul Snapshot}{\v snapshot} \tab Inhalt der Liste in Datei schreiben (Pr\'e4fix IMP)
\par {\ul Refresh}{\v refresh}\tab Neueinlesen der Importe
\par {\ul Beenden}{\v beenden}\tab Dialog beenden
\par \pard\plain \widctlpar \f7\fs22\lang1031 \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 e}{\fs20\lang1024 xports}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 E}{\fs20\lang1024 
xporte}}K{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 E}{\fs20\lang1024 xporte}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Exporte
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Exporte sind f\'fcr andere Module zug\'e4ngliche {\uldb Entries}{\v entries}. Der Verweis auf diese Exporte (der {\uldb Import}{\v imports}
) geschieht in den importierenden Modulen durch Angabe einer Nummer oder, sofern vorhanden, eines Namens. Im exportierenden Modul sind diese Namen in den Tabellen der residenten bzw. nichtresidenten Namen abgelegt. Exporte mit residenten Namen sind in der
 Liste mit 'R' gekennzeichnet.
\par 
\par 
\par {\b Funktionen}
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\uldb Disassembler}{\v disassembler}\tab disassembliert die exportierte Funktion.
\par {\ul Umsortieren}{\v umsortexport}\tab \'c4ndert die Sortierung
\par {\ul Importiert von}{\v importedfrom}\tab Anzeige der statischen Referenzen auf diesen Export
\par {\uldb Entries}{\v entries}\tab Anzeige der Entry Tabelle
\par {\ul Refresh}{\v refresh}\tab Neueinlesen der Exporte
\par {\ul Beenden}{\v beenden}\tab Dialog beenden
\par \pard\plain \widctlpar \f7\fs22\lang1031 \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 S}{\fs20\lang1024 ortexport
\par }Sortexport}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 S}ortexport}K{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 S}ortexport}}
\par Es kann zwischen den Sortierungen "nach Index", "nach Name " oder "nach Adresse" umgeschaltet werden.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 i}{\fs20\lang1024 mportiertvon}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 I}{\fs20\lang1024 mportiert von}}K{\footnote \pard\plain 
\widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 I}{\fs20\lang1024 mportiert von}}}
\par Mit dieser Funktion kann, wenn der "Export" Null aktiv ist, ermittelt werden, welche anderen Module statische Referenzen auf das aktuelle Modul haben. Ist ein Export <> Null aktiv, sucht WinInfo alle Module nach einem statischen Import dieser Funktion ab.

\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 d}{\fs20\lang1024 isassembler}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 D}{\fs20\lang1024 isassembler}}K{\footnote \pard\plain 
\widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 D}{\fs20\lang1024 isassembler}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Disassembler
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Der integrierte Disassembler hat folgende Charakteristika:
\par 
\par Es kann sowohl der 16-Bit-Code der Windows-Module als auch den 32-Bit-Code des Windows VMM und der VxDs (nur im erweiterten Modus von Windows) interpretiert und angezeigt werden. Der 32-Bit-Code ist nur \'fcber die Analyse der Interrupts{\v interrupts}
 zug\'e4nglich.
\par Es werden nach M\'f6glichkeit symbolische Namen angezeigt. Der Disassembler wertet dazu die Informationen aus den Modulen direkt aus.
\par 
\par {\b Funktionen}
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\ul Optionen}{\v disassopt}\tab Parameter des Disassemblers einstellen
\par {\ul\lang1040 Disassembler}{\v\lang1040 disass2}{\lang1040 \tab weitere Disassember-Dialogbox \'f6ffnen
\par }{\ul Snapshot}{\v snapshot}\tab disassemblierte Liste in Datei schreiben (Pr\'e4fix UNA) -
\par {\ul Beenden}{\v beenden}\tab Dialog beenden
\par \pard\plain \widctlpar \f7\fs22\lang1031 \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 d}{\fs20\lang1024 isass2}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 w}{\fs20\lang1024 
eiteres Disassemblerfenster}}}
\par Diese Funktion ist nur m\'f6
glich bei fest verdrahteten Verzweigungen (bspw. "call GLOBALALLOC", "jnz 5555", nicht aber "jmp dword ptr [bx]"). Normalerweise kann die Funktion dann auch mittels Doppelklick auf die entsprechende Zeile aktiviert werden. Auf die
se Weise kann elegant durch den Code navigiert werden.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 d}{\fs20\lang1024 isassopt}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 D}{\fs20\lang1024 isassembler Optionen}}}
\par Es bestehen folgende Optionen:
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 Zeilen\tab maximale Anzahl der disassemblierten Zeilen. Es k\'f6nnen nicht mehr als 32767 Zeilen maximal disassembliert werden.
\par Adresse\tab Vorgabe einer expliziten Anfangsadresse zur Disassemblierung. Ung\'fcltige Adressen werden nicht angenommen.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 a}{\fs20\lang1024 nzeige}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 H}{\fs20\lang1024 exdump Anzeige}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Hexdump
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Anzeige eines Speicherdumps. In der Statuszeile werden die Informationen aus dem zugeh\'f6rigen Descriptor (LDT) angezeigt. Es k\'f6nnen Objekte mit Gr\'f6\'dfen bis zu 4 GB verarbeitet werden. Page Faults werden abgefangen und in der Stat
uszeile unten rechts angezeigt. Solange kein Fehler auftritt (d\'fcrfte der Normalfall sein), steht hier "Ok".
\par 
\par {\b Funktionen
\par }
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\ul Beenden}{\v beenden}\tab Dialog beenden
\par {\ul Optionen}{\v dumpopt}\tab Parameter einstellen
\par {\ul Speichern}{\v dumpsave} \tab Objektinhalt in Datei schreiben (Pr\'e4fix HDS)
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 d}{\fs20\lang1024 umpsave}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 H}{\fs20\lang1024 exdump speichern}}}
\par \pard\plain \widctlpar \f7\fs22\lang1031 Es wird der Inhalt des Objektes in eine Datei geschrieben. Der Dateiname wird \'fcber GetTempFilename() ermittelt. Das zugeh\'f6rige Verzeichnis wird normalerweise \'fcber die SET-Variable {\b TEMP} gesetzt.
\par Vorsicht bei Speicherobjekten > 64KB. Nur g\'fcltige Huge-Speicherobjekte sind hier erlaubt. Bei Objekten auf dem globalen Heap d\'fcrfte es keine Probleme geben. Andere Objekte aus der GDT bzw. LDT sind aber kritisch.
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 d}{\fs20\lang1024 umpopt}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 H}
{\fs20\lang1024 exdump Parameter einstellen}}}
\par \pard\plain \widctlpar \f7\fs22\lang1031 Optionen:
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 \tab das Ausgabeformat kann eingestellt werden auf Bytes, Words oder Doublewords.
\par 
\par \tab es kann ein Suchstring eingegeben und nach ihm gesucht werden. Allerdings ist bei Speicherobjekten > 64KB Vorsicht geboten. Nur g\'fcltige Huge-Objekte sind erlaubt. Bei Objekten des globalen Heaps d\'fc
rfte es keine Probleme geben. Andere Objekte aus der GDT bzw. LDT sind aber kritisch.
\par \pard\plain \widctlpar \f7\fs22\lang1031 
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 r}{\fs20\lang1024 esource}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 R}{\fs20\lang1024 esourcen}}K{\footnote \pard\plain 
\widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 R}{\fs20\lang1024 esourcen}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Resourcen
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Resourcen sind von Windows direkt interpretierbare Daten wie Icons, Men\'fcs, Dialogboxen usw. Sie werden durch den Resource-Compiler an das .EXE-File angeh\'e4ngt.
\par 
\par In der Liste werden der Resourcetyp, die ID der Resource (bzw. deren Name), das von dieser Resource belegte Handle im globalen Heap, die Anzahl Verriegelungen sowie die Flags angezeigt.
\par 
\par In der oberen Statuszeile wird ausgegeben: die Anzahl der Resourcen, die Anzahl der zur Zeit belegten Handles, die L\'e4nge der Resourcen insgesamt und, in Klammern, die L\'e4nge der zur Zeit geladenen Resourcen.
\par 
\par In der unteren Statuszeile wird ausgegeben: f\'fc
r das aktuelle Element die Adresse des Resource Handlers (zumeist eine Adresse im Kernel) und die Speicheroptionen. Ist die Resource bereits geladen, werden rechts die Informationen aus dem Descriptor angezeigt.
\par 
\par {\b Funktionen}
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\uldb Anzeigen}{\v anzeige}\tab Hexdump der Resource
\par {\ul Interpret}{\v interpret}\tab Interpretierung der Resource
\par {\ul Detail}{\v detailres}\tab strukturierte Anzeige der Resource
\par {\ul Entladen}{\v freeres}\tab Entladen der Resource
\par {\ul Snapshot}{\v snapshot} \tab Inhalt der Liste in Datei schreiben (Pr\'e4fix RES)
\par {\ul Refresh}{\v refresh}\tab Neueinlesen der Resourcen
\par {\ul Beenden}{\v beenden}\tab Dialog beenden
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 i}{\fs20\lang1024 nterpret}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 R}{\fs20\lang1024 esource Interpreter}}K
{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 R}{\fs20\lang1024 esource Interpreter}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Interpretation von Resourcen
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Es k\'f6nnen verarbeitet werden:
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 - Icons
\par - Bitmaps
\par - Cursor
\par - Men\'fcs
\par - Dialogboxen
\par \pard\plain \widctlpar \f7\fs22\lang1031 
\par Bei Dialogboxen ist eine Interpretation nicht immer m\'f6glich. Falls in der Dialogbox private Controls enthalten sind, k\'f6nnen diese bspw. (in diesem Fall) falsche Annahmen \'fc
ber den Stack bzw. das Datensegment treffen und es kommt zu einem "UAE" (Stackfehler oder allgemeine Schutzverletzung). Diese Fehlerbedingung wird von WinInfo abgefangen und angezeigt.
\par Bei Dialogboxen mit Standardelementen kann es Schwierigkeiten geben, wenn das Attribut "Ownerdraw" verwendet wird.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 l}{\fs20\lang1024 ocal}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 H}{\fs20\lang1024 eap (local)}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 H}{\fs20\lang1024 eap (local)}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Lokaler Heap
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Anzeige der Objekte des selektierten lokalen Heaps. Es werden das Handle jedes Elements, seine Adresse und Gr\'f6\'dfe (die Gr\'f6\'df
e in dezimal), die Flags (frei, fixed oder moveable) sowie die Anzahl der Verriegelungen ausgegeben. Der Elementtyp rechts kann nur bei USER- und GDI-Heaps ermittelt werden.
\par 
\par Ein lokaler Heap kann in jedem Datensegment mit der Funktion LocalInit() eingerichtet werden. Der Startup-Code einer Anwendung bzw. einer DLL erledigt dies f\'fc
r das automatische Datensegment DGROUP, wenn im Header des Moduls der Wert des Feldes "Initial Heap Size" <> Null ist.
\par 
\par {\b Funktionen}
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\uldb Anzeigen}{\v anzeige}\tab Hexdump des Heap-Objektes
\par {\ul Compact}{\v compactlocal}\tab r\'e4umt den Heap auf
\par {\ul Umsortieren}{\v sortlocal}\tab wechselt die Sortierung zwischen Handle und Adresse 
\par {\ul Snapshot}{\v snapshot} \tab Inhalt der Liste in Datei schreiben (Pr\'e4fix LCH)
\par {\ul Refresh}{\v refresh}\tab Neueinlesen des Heaps
\par {\ul Beenden}{\v beenden}\tab Dialog beenden
\par \pard\plain \widctlpar \f7\fs22\lang1031 
\par 
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 d}{\fs20\lang1024 etails}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 D}{\fs20\lang1024 etails Modul}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 D}{\fs20\lang1024 etails Modul}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Module Database
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Beim erstmaligen Laden eines Moduls wird diesem eine "Module Database" zugeordnet. Deren Struktur hat starke \'c4hnlichkeit mit dem "Ne
w Executable"-Format der Windows-Module. Wichtigste Bestandteile sind: Adresse und Inhalt der Segmenttabelle (Segmente), Adresse und Inhalt der Entry-Tabelle, Adresse und Inhalt der Tabelle der residenten Namen, Adresse und Inhalt der Modulreferenztabelle
, Adresse und Inhalt der importierten Namen, Adresse der Tabelle der nichtresidenten Namen.
\par 
\par {\b\lang1036 Funktionen}{\lang1036 
\par 
\par }\pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\uldb\lang1036 Disassembler}{\v\lang1036 disassembler}{\lang1036 \tab disassembliert den Startcode des Moduls
\par }{\ul Beenden}{\v beenden}\tab Dialog beenden
\par \pard\plain \widctlpar \f7\fs22\lang1031 
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 d}{\fs20\lang1024 etailtask}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 D}{\fs20\lang1024 etails Task}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 D}{\fs20\lang1024 etails Task}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Task Database
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Jeder Task ist eine Task Database zugeordnet, in der taskspezifische Daten abgelegt werden. Die wichtigsten Felder dieser Datenstruktur werden hier ausgegeben.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 s}{\fs20\lang1024 tacktask}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 S}{\fs20\lang1024 tack Trace}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 S}{\fs20\lang1024 tack Trace}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Stack Trace
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Anzeige der aktuellen Stack Frames einer Task. 
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 l}{\fs20\lang1024 oadmod}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 L}{\fs20\lang1024 oad Modul}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 L}{\fs20\lang1024 oad Modul}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Load Modul
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Dialog zum expliziten Laden eines Moduls im NE-Format. Ist das Modul eine DLL und bereits im Speicher, wird zun\'e4chst nichts sichtbares passieren. Beim Beenden der dieses Modul referenzierenden Programme w
ird die DLL dann allerdings u.U. nicht mehr aus dem Speicher entfernt. Werden Programmodule geladen, wird auf jeden  Fall eine neue Instanz der Applikation erzeugt und aktiviert.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 f}{\fs20\lang1024 reemod}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 f}{\fs20\lang1024 ree Modul}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 F}{\fs20\lang1024 ree Modul}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Free Modul
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par F\'fchrt die Funktion FreeLibrary() bzw. FreeModule() aus. Dabei wird der Referenzz\'e4hler um eins vermindert. Erreicht er Null, wird das Modul physikalisch entladen.
\par Besondere Vorsicht ist bei dieser Funktion angebracht. Sie ist nur f\'fcr Sonderf\'e4lle gedacht. Unkritisches Entladen von Modulen wird fr\'fcher oder sp\'e4ter zum Systemabsturz f\'fchren. Sinnvoll ist das Entladen nur in Ausnahmef\'e4
llen, wenn die Verwaltung der DLLs \'fcber Windows durcheinander geraten ist (des\'f6fteren in Windows 3.0) und man ohne Neustart von Windows eine neue Programmkopie in den Speicher laden m\'f6chte.\page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar 
\f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 a}{\fs20\lang1024 tome}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 A}{\fs20\lang1024 tome}}K{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 A}{
\fs20\lang1024 tome}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Atome
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Falls eine Atomtabelle im selektierten Datensegment vorhanden ist, kann sie \'fcber diese Funktion betrachtet werden.
\par Eine Atom ist ein Handle, das auf einen String verweist.
\par Windows verwaltet diese Strings intern nach einem Hash-Algorithmus.
\par In jedem Datensegment kann \'fcber die Funktion InitAtomTable() eine Atomtabelle angelegt werden.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 w}{\fs20\lang1024 indowbox}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 W}{\fs20\lang1024 indow Info}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 W}{\fs20\lang1024 indow Info}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Windows
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par In diesem Dialog werden der Stil des Windows als Liste im Klartext, eventuelle Properties des Windows sowie alle Child-Windows des Windows angezeigt. Durch Doppelklick auf ein Child-Window kann f\'fcr dieses Child eine ebensolche Anzeige ge\'f6
ffnet werden. Das kann wiederholt werden, solange noch Child-Windows vorhanden sind.
\par Mit der Funktion {\cf2 Disassembler} kann die Window-Prozedur des Fensters analysiert werden.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 t}{\fs20\lang1024 erminate}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 T}{\fs20\lang1024 erminate Task}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 T}{\fs20\lang1024 erminate Task}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Terminate
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par WinInfo schickt die Message WM_CLOSE an das Hauptfenster der Applikation. Existiert kein solches Fenster, wird mit PostAppMessage die Message WM_QUIT geschickt.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 k}{\fs20\lang1024 ill}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 K}{\fs20\lang1024 ill Task}}K{\footnote \pard\plain 
\widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6  }{\fs20\lang1024 Kill Task}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Kill
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Bei einer Beendigung mit TerminateApp() werden u. U. nicht alle von der Task benutzten Resourcen wieder freigegeben. Falls die Task Interruptvektoren "eigenh\'e4
ndig" manipuliert hat, ist auch ein Systemabsturz nicht unwahrscheinlich. Also: diese Funktion nur im {\cf6 absoluten Notfall} anwenden!
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 s}{\fs20\lang1024 elektor}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 S}{\fs20\lang1024 elektor}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Selektor
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Ein Selektor ist ein Verweis auf eine Deskriptor Tabelle. F\'fcr Anwendungen unter Windows sind normalerweise nur Selektoren der {\cf2 Local Descriptor Table} zug\'e4nglich. Im erweiterten Modus von Windows 3.X stehen 8192 Selektoren insgesamt f\'fc
r alle aktiven Anwendungen zur Verf\'fcgung, im Standardmodus nur 4096.
\par Die Eingabe eines Selektors mu\'df im hexadezimalen Format geschehen (Wertebereich 0-FFFF). G\'fcltige Selektoren enden unter Windows 3.1 mit 7 oder F, unter Windows 3.0 mit 5 oder D. Ung\'fcltige Selektoren werden nicht angenommen.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 l}{\fs20\lang1024 inear}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 l}{\fs20\lang1024 inear}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Lineare Adresse
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\b 
\par }Eine lineare Adresse wird im hexadezimalen Format ein- und ausgegeben. Der g\'fcltige Bereich liegt zwischen 0 und FFFFFFFF. Unter {\ul Windows 3.1} k\'f6nnen Adressen eingegeben werden, f\'fc
r die kein Eintrag in den Paging Tabellen vorliegt und deren Ansprechen deshalb zu einem Page Fault f\'fchrt. Diese Exception wird abgefangen.{\b 
\par }\page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 c}{\fs20\lang1024 ompact}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 c}{\fs20\lang1024 ompact}}}
\par Es wird die Funktion GlobalCompact(-1) ausgef\'fchrt und anschlie\'dfend tempor\'e4r 1 Byte allokiert.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 d}{\fs20\lang1024 iscard}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 d}{\fs20\lang1024 iscard}}}
\par Es wird die Funktion GlobalDiscard() ausgef\'fchrt. Die Funktion ist nur ausf\'fchrbar bei Objekten mit Speicheroption "discardable".
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 h}{\fs20\lang1024 eapwalkopt}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 h}{\fs20\lang1024 eapwalkopt}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Heapwalk Optionen
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par {\ul Selektionsparameter (Filter)}:
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\lang2057 Speicheroption\tab discardable, moveable, discarded
\par }Objekttyp\tab CODE, DATA, RESOURCE
\par Owner\tab Name eingeben
\par Adressbereich\tab Beginn und Ende eingeben
\par \pard\plain \widctlpar \f7\fs22\lang1031 
\par {\ul Sortierparameter}:
\par 
\par Handle, Adresse, L\'e4nge, Name des Owners
\par 
\par {\ul Liste:}
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 Heap\tab alle Objekte des globalen Heaps
\par {\lang2057 LRU\tab "last recently used" Liste
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\lang2057 
\par }{\b Funktionen}
\par 
\par \pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\ul Compact}{\v compact}\tab Alle Objekte mit Attribut "Discardable" werden discarded
\par {\ul Snapshot}{\v snapshot}\tab Inhalt der aktuellen Liste in Datei schreiben (Pr\'e4fix GLH).
\par \pard\plain \widctlpar \f7\fs22\lang1031 \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 a}{\fs20\lang1024 uto}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 a}{
\fs20\lang1024 uto}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Automatisches Datensegment
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Hexdump des automatischen Speichersegments (DGROUP) einer Task.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 s}{\fs20\lang1024 witchto}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 s}{\fs20\lang1024 witchto}}}
\par Es wird das aktive Fenster der Task ermittelt und aktiviert.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 s}{\fs20\lang1024 egmente}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 s}{\fs20\lang1024 egmente}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Segmente
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Die Segmente eines Moduls sind in einer Segmenttabelle beschrieben. Diese befindet sich in der Modul Database. Manche Module (bspw. Fonts) besitzen keine Segmente.
\par {\fs20\lang1024 \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 k}{\fs20\lang1024 lassen}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 K}{\fs20\lang1024 lassen}}K{\footnote \pard\plain 
\widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6  }{\lang1024 Klassen}}}{\lang1024 
\par }\pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Klassen
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\b\lang1024 
\par }{\lang1024 Anzeige der zur Zeit registrierten Windowklassen.
\par 
\par }{\b\lang1024 Funktionen}{\lang1024 
\par 
\par }\pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\ul Detail}{\v detailclass}\tab strukturierte Anzeige der Klasse
\par {\uldb Disassembler}{\v disassembler}\tab disassemblieren der Fensterfunktion
\par {\ul Refresh}{\v refresh}\tab Neueinlesen der Klassen
\par {\ul Beenden}{\v beenden}\tab Dialog beenden
\par \pard\plain \widctlpar \f7\fs22\lang1031 {\lang1024 
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 u}{\fs20\lang1024 sermon}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 U}{\fs20\lang1024 SER Monitor}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 U}{\fs20\lang1024 SER Monitor}}}{\lang1024 
\par }\pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 USER Monitor
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\lang1024 
\par Anzeige (mit automatischem Refresh) der Windows Resourcen USER + GDI Heap.
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 w}{\fs20\lang1024 indowlist}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 W}{\fs20\lang1024 indows Liste}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 W}{\lang1024 indows Liste}}}{\lang1024 
\par }\pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Windows
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\lang1024 
\par Anzeige der zur Zeit existierenden Windows. Mit Doppelklick kann in eine }{\ul\lang1024 Window-Box}{\v windowbox}{\lang1024  verzweigt werden.
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 m}{\fs20\lang1024 cblist}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 D}{\fs20\lang1024 OS MCB-Liste}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 D}{\fs20\lang1024 OS MCB-Liste}}}{\lang1024 
\par Unter DOS wird der Hauptspeicher in einer Liste von Memory Control Blocks (MCB) verwaltet. Windows \'fcbernimmt beim Start den gesamten verf\'fc
gbaren DOS-Speicher und verwaltet ihn selbst. Deshalb wird diese Verwaltung in der MCB-Liste nicht sichtbar. Zu sehen sind aber bspw. aus WINSTART.BAT geladene TSR-Programme.
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 d}{\fs20\lang1024 osdevice}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 D}{\fs20\lang1024 OS Device-Liste}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 D}{\lang1036 OS Device-Liste}}}{\lang1024 
\par Die unter DOS verf\'fcgbaren Ger\'e4te werden angezeigt. F\'fcr Windows spielen sie nur eine untergeordnete Rolle. Man kann aber zumindest sehen, ob ein Expanded Memory Manager aktiv ist.
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 d}{\fs20\lang1024 osdpb}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 D}{\fs20\lang1024 PB}}K{\footnote \pard\plain 
\widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 D}{\lang1036 PB}}}{\lang1024 
\par Die Drive Parameter Blocks (DPB) enthalten die f\'fcr DOS notwendigen Informationen f\'fcr FAT-orientierte Ger\'e4te.
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 d}{\fs20\lang1024 oscds}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1036 C}{\lang1036 DS}}K{\footnote \pard\plain 
\widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 C}{\lang2057 DS}}}{\lang1024 
\par F\'fcr jedes logische Laufwerk (eingestellt durch Parameter LASTDRIVE in CONFIG.SYS) wird ein CDS-Eintrag angelegt und dort der jeweils aktuelle Pfad vermerkt.
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 e}{\fs20\lang1024 msstat}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 E}{\fs20\lang1024 MS status}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 E}{\fs20\lang1024 MS Status}}}
\par {\lang1024 Expanded Memory sollte f\'fcr im Protected Mode ablaufende Windows-Anwendungen keine Rolle mehr spielen. F\'fcr Real-Mode-Programme (bspw. vor dem Start von Windows geladene  TSR-Programme) gilt dies nicht.
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 x}{\fs20\lang1024 msstat}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 X}{\fs20\lang1024 MS status}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 X}{\fs20\lang1024 MS Status}}}
\par {\lang1024 XMS bzw. EMBs (Extended Memory Blocks) sind nur f\'fcr "DOS"-Programme interessant (bspw. Smartdrive). Windows-Anwendungen k\'f6nnen so ohne weiteres auch gar keine EMBs anfordern, da es f\'fcr XMS nur einen Real-Mode Entry gibt.
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 d}{\fs20\lang1024 pmimon}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 D}{\fs20\lang1024 PMI Monitor}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang1040 D}{\fs20\lang1024 PMI Monitor}}}{\fs20\lang1024 
\par }\pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 DPMI Monitor
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\lang1024 
\par Anzeige der DPMI Speicherbelegung. Automatischer Refresh alle 2 Sekunden.
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 v}{\fs20\lang1024 xdstat}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 V}{\fs20\lang1024 xD}}K{\footnote \pard\plain 
\widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 V}{\lang2057 xD}}}{\lang1024 
\par }\pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 VxD
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\lang1024 
\par Anzeige der vorhandenen Protected Mode Entries der Standard-VxDs.\page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 e}{\fs20\lang1024 nhanced}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {
\cs19\fs16\up6 E}{\fs20\lang1024 rweiterter Modus}}K{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 E}{\fs20\lang1024 rweiterter Modus}}}{\lang1024 
\par }\pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Erweiterter Modus
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\lang1024 
\par Anzeige der zur Zeit vorhandenen virtuellen Maschinen (VM).
\par 
\par Erkl\'e4rung der Spalten:
\par 
\par }\pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 Handle\tab Flat-Adresse des VM-Kontrollblocks. Dort sind die wichtigsten VM-spezifischen Daten abgelegt. 
\par 
\par ID\tab Jeder VM ist eine eindeutige Identifikationsnummer zugeordnet. Die Windows-VM hat normalerweise die Nummer 1 (=SystemVM).
\par 
\par Flags\tab Zustand der VM. Die Flags werden in der Statuszeile f\'fcr die selektierte Zeile im "Klartext" ausgegeben. Einige k\'f6nnen \'fcber PIFEDIT (bzw. f\'fcr Windows \'fcber die Systemsteuerung) ge\'e4ndert werden.
\par \pard\plain \widctlpar \f7\fs22\lang1031 {\lang1024 
\par }\pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 V86(high)\tab Jede VM hat ihren eigenen virtuellen V86-Adressraum (Lineare Adressen von 0-0x10FFFF), der aber nur bei Ausf\'fc
hrung der VM in den realen V86-Adressraum "gemappt" wird. Mit dem Inhalt dieses Feldes, interpretiert als Flat-Offset, kann der Inhalt des V86-Adressraum einer VM auch dann angesprochen werden, wenn diese VM nicht die aktuelle ist.
\par 
\par {\lang1036 PgTab\tab Page Table des Adressraums 0-0x3FFFFF.  }Da jede VM ihren eigenen V86-Adressraum hat, ben\'f6tigt auch jede eine eigene Page Table f\'fcr diesen Bereich. 
\par 
\par akt. PSP\tab Anzeige der "Besitzers" des Speicherblocks des aktuellen PSPs in der VM. In neueren DOS-Versionen sind das normalerweise die ersten 8 Bytes des Applikationsnamens. In der Windows-VM mu\'df der aktuelle DOS-PSP {\ul nicht}
 mit dem PSP der aktuellen Task \'fcbereinstimmen (das w\'e4re in diesem Fall immer WinInfo selbst). {\cf2 Die Ausgabe erfolgt nur bei Aktivierung des Schalters GetVMPSP in WININFO.INI}!
\par 
\par \pard\plain \widctlpar \f7\fs22\lang1031 {\b\lang1024 Funktionen}{\lang1024 
\par 
\par }\pard\plain \s21\fi-2268\li2268\widctlpar\tx2268 \f7\fs22\lang1031 {\uldb Page Table}{\v paging}\tab Anzeige der Page Table f\'fcr den V86-Adressraum
\par {\uldb Switch}{\v switchvm}\tab VM in Vordergrund bringen
\par {\ul VxD}{\v vxdstat}\tab VxDs mit Protected Mode API anzeigen
\par {\ul Refresh}{\v refresh}\tab Liste neu aufbereiten
\par {\ul Beenden}{\v beenden}\tab Dialog beenden
\par \pard\plain \widctlpar \f7\fs22\lang1031 {\lang1024 
\par }{\b\lang1024 Hinweis}{\lang1024 
\par 
\par Die Informationen \'fcber die virtuellen Maschinen werden durch sog. VMM-Funktionen ermittelt. Diese Funktionen stehen nur im Ring 0 des Prozessors zur Verf\'fcgung. Normalerweise mu\'df dazu ein virtueller Ger\'e4tetreiber die Applikation unterst\'fc
tzen. WinInfo verzichtet auf diese Vorgehensweise und wechselt in den Ring 0 \'fcber ein sog. Call Gate. Das geht nur, wenn, wie in der aktuellen Version von Windows, die LDT direkt manipuliert werden kann.
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 s}witchvm}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 V}M in Vordergrund\tab }K{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {
\cs19\fs16\up6 V}M in Vordergrund}}{\lang1024 
\par }\pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 VM in Vordergrund 
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\lang1024 
\par \'c4hnliche Funktion wie }{\uldb\lang1024 Switch}{\v\lang1024 switchto}{\lang1024  im Dialog }{\uldb\lang1024 Tasks}{\v\lang1024 tasks}{\lang1024 , jetzt aber auf VM-Ebene. Sinnvoll kann die Funktion dann sein, wenn virtuelle Maschinen nicht \'fc
ber WINOLDAP erzeugt werden (geschieht automatisch bei den Funktionen WinExec() bzw. LoadModule(), wenn eine DOS-Applikation geladen wird) oder aber WINOLDAP mit einem schweren Fehler abgebrochen ist. Dann werden diese VMs nicht in der S
ystem-VM abgebildet und erscheinen nicht in der Windows Task-Liste.
\par  Mit dieser Funktion kann zwar }{\ul\lang1024 in}{\lang1024  die VM "geswitched" werden, dort angelangt steht aber u.U. die von WINOLDAP aktivierte Taskswitch-M\'f6glichkeit mit Alt-Tab bzw. Alt-Esc nicht zur Verf\'fcgung. Dann ist eine R\'fc
ckkehr zur Windows-VM nur \'fcber Beendigung der Applikation oder \'fcber Ctrl-Alt-Delete m\'f6glich.
\par \tab \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 p}aging}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 P}{\fs20\lang1024 aging}}K{\footnote \pard\plain \widctlpar 
\f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 P}{\lang2057 aging}}}{\lang1024 
\par }\pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Paging
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\lang1024 
\par Anzeige der Paging Tabellen (Page Directory bzw. Page Tables). 
\par 
\par Es werden nur die zur Zeit "gemappten" Bereiche ausgegeben. Unter der Spalte "Entry" ist die physikalische Adresse (Bits 12-31) zu sehen. Die \'dcbersetzung physikalischer Adressen in lineare Adressen geschieht immer \'fcber DPMI-Funktion 0x0800.
\par 
\par Um die Adresse des Page Directories zu ermitteln, mu\'df der Inhalt von CR3 gelesen werden. Der entsprechende Maschinenbefehl (MOV EAX,CR3) ist aber nur im Ring 0 ausf\'fchrbar. Normalerweise ist es unter Windows in solchen F\'e4
llen notwendig, einen sog. Virtuellen Devicetreiber (VxD) in SYSTEM.INI einzubinden. WinInfo verzichtet auf diese Vorgehensweise und wechselt in den Ring 0 durch direkte Manipulation der LDT. In zuk\'fc
nftigen Windows-Versionen ist dies wahrscheinlich nicht mehr m\'f6glich. Unter Win/OS2 und Windows/NT ist es von vornherein ausgeschlossen.
\par 
\par Im Standard Modus von Windows steht die Funktion leider nicht zur Verf\'fcgung, da der zugrundeliegende DOS-Extender DOSX die DPMI-Funktion 0x0800 (Physical Address Mapping) nicht unterst\'fctzt.
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 k}{\fs20\lang1024 eyboard}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 T}{\fs20\lang1024 astatur}}K{\footnote 
\pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 T}{\fs20\lang1024 astatur}}}{\lang1024 
\par }\pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Tastatur
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\lang1024 
\par Mit F6 erscheint ein Popup-Men\'fc mit allen derzeit ge\'f6ffneten Fenstern. Durch Selektion einesFensters wird dieses aktiviert. Ikonisierte Fenster werden dabei wiederhergestellt.
\par Innerhalb der Dialoge kann mit den \'fcblichen Tasten zwischen den Dialogfeldern gewechselt werden. Mit Escape werden die Dialogfenster geschlossen.
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 c}{\fs20\lang1024 opyright}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 C}{\fs20\lang1024 opyright}}}{\lang1024 
\par }\pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20\lang2057 WinInfo Version 1.8
\par }\pard\plain \widctlpar \f7\fs22\lang1031 {\lang1024 
\par Freeware
\par 
\par Copyright \'a9 japheth 1991-1999.
\par \page }{\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 f}{\fs20\lang1024 ilehandle}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 F}{\fs20\lang1024 ileHandle}}}{\lang1024 

\par }Die DOS-File-Handles sind Indizes auf eine DOS-interne Tabelle (SFT). Diese Tabelle gilt global, also auch VM-\'fcbergreifend. Zus\'e4
tzlich werden jeder DOS-Box im 386-enhanced Mode in der Voreinstellung 10 private Handles zugeteilt (Eintrag PerVMFiles in SYSTEM.INI).  Wird eine DOS-Box nicht korrekt beendet (sondern bspw. durch "Verletzung der Systemintegrit\'e4
t"), bleiben u. U. einige Handles bis zum n\'e4chsten Boot belegt.\page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 u}{\lang1024 msortimport}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {
\cs19\fs16\up6\lang2057 u}{\lang1024 msortimport}}}
\par sortiert werden kann nach
\par - Adresse
\par - Name
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 u}{\lang1024 msortexport}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 u}{\lang1024 msortexport}}}
\par sortiert werden kann nach
\par - Entry
\par - Name
\par - Adresse
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 i}{\lang1024 mportedfrom}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 i}{\lang1024 mportedfrom}}}
\par 
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Importiert von
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Angezeigt werden alle Referenzen auf das selektierte Modul bzw. die selektierte Funktion. Um diese Informationen zu bekommen, mu\'df die Modulliste durchlaufen werden und f\'fc
r jedes Modul die Importe eingelesen und analysiert werden. Deshalb kann es hier zu reger Festplattenaktivit\'e4t kommen.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 d}{\lang2057 etailclass}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 d}{\lang2057 etailclass}}}
\par 
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Fenster Klassen
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Anzeige des Klassenstils, der Fensterfunktion, des Owners usw.
\par 
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 d}{\lang2057 etailres}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 d}{\lang2057 etailres}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 strukturierte Anzeige von Resourcen
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par folgende Resourcentypen k\'f6nnen z.Z. strukturiert angezeigt werden:
\par 
\par Men\'fcs (Typ 4)
\par Dialogboxen (Typ 5)
\par Strings (Typ 6)
\par Namenstabellen (Typ 15)
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 f}{\lang2057 reeres}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 f}{\lang2057 reeres}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Resourcen entladen
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par nur Resourcen mit Speicheroption "discardable" k\'f6nnen entladen werden.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 s}{\lang2057 napshot}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 S}{\lang2057 napShot}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Snapshot
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Mit dieser Funktion wird der Inhalt einer Listbox, u.U. gesondert aufbereitet, in eine Datei geschrieben. Der Dateiname wird, au\'dfer eines kontextabh\'e4ngigen Pr\'e4fixes, \'fc
ber die Windows-Funktion GetTempFileName() bestimmt. Normalerweise werden diese Dateien im durch die Set-Variable TEMP bestimmten Verzeichnis abgelegt.
\par  Im Normalfall wird der Inhalt zus\'e4tzlich in die Zwischenablage \'fcbertragen!
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 s}{\lang2057 ortlocal}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 S}{\lang1024 ort Local}}}
\par es kann umgeschaltet werden zwischen Sortierung 
\par - nach Adresse oder
\par - nach Handle.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 c}{\lang2057 ompactlocal}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 C}{\lang1024 ompact Local}}}
\par r\'e4umt den lokalen Heap auf.
\par \page {\cs19\fs16\up6 #{\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6\lang2057 e}{\lang2057 ntries}}${\footnote \pard\plain \widctlpar \f7\fs22\lang1031 {\cs19\fs16\up6 E}{\lang1024 ntries}}}
\par \pard\plain \s22\widctlpar \b\f7\lang1031 {\fs20 Entries
\par }\pard\plain \widctlpar \f7\fs22\lang1031 
\par Die Entry-Tabelle ist zentraler Bestandteil des dynamischen Linkens. Ein Entry ist eine innerhalb eines Moduls eindeutige Nummer, der ein Offset, eine Segmentnummer und ein Typ zugeordnet werden. \'dc
ber die Tabellen der residenten und nichtresidenten Namen kann ein Entry dar\'fcberhinaus mit einem Namen verbunden sein.
\par 
\par Der Typ eines Entries wird folgenderma\'dfen interpretiert:
\par 
\par Bit 0\tab 1=Entry ist ein {\uldb Export}{\v exports} und kann von anderen Modulen referenziert werden
\par Bit 1\tab 1=Entry benutzt ein globales (=shared) Datensegment
\par Bit 2-7\tab f\'fcr Windows nicht benutzt
\par 
\par Im Unterschied zur Anzeige der {\uldb Exporte}{\v exports} wird hier bei der Adresse nicht das aktuelle Segment, sondern die logische Segmentnummer angegeben. Zudem werden die Entrynummern dezimal ausgegeben.
\par 
\par Bei Anwendungen f\'fcr den Real Mode unter Windows 3.0 sind unter Umst\'e4nden einige nicht exportierte Entries vorhanden (bewegliche Entries). F\'fcr die nur im Protected Mode lauff\'e4
higen Anwendungen dagegen spielen nicht exportierte Entries so gut wie keine Rolle mehr.
\par 
\par 
\par 
\par 
\par }